* API
  An API, which stands for Application Programming Interface, is a set of
  protocols that enable different software components to communicate and
  transfer data.

** API Request Response Cycle
   APIs work by sharing data between software systems (applications, devices,
   web apps). This happens through a request and response cycle. A request is
   sent to the API, which retrieves the data and returns it to the caller.

*** API Client
    The API client is responsible for starting the conversation by sending the
    request to the API server. The request can be triggered in many ways.A user
    might initiate an API request by entering a search term or clicking a
    button. API requests may also be triggered by external events, such as a
    notification from another application.

*** API Request
    An API request typically includes the following components:

**** Endpoint
     An API endpoint is a dedicated URL that provides access to a specific
     resource. An `/articles` endpoint in a blogging app would include the
     logic for processing all requests that are related to articles.

**** Methods
     The request's method indicates the type of operation the client would like
     to perform on a given resource. [REST]{# REST} APIs are accessible through
     standard HTTP methods, which perform common actions like retrieving,
     creating, updating and deleting data.

**** Parameters
     Parameters are the variables that are passes to an API endpoint to provide
     specific instructions for the API to process. These parameters can be
     included in the API request as a part of the URL, in the query string, or
     in the request body. The `/article` endpoint of a blogging API might
     accept a "topic" parameter, which it would use to access and return
     articles on a specific topic.

**** Request Headers
     Request headers are key-value pairs that provide extra details about the
     request, such as its content type or authentication credentials.

**** Request body
     The body is the main part of the request, and it includes the actual data
     that is required to create, update, or delete a resource. The request body
     for the blogging API might include article's content, title and author.

*** API server
    The API client sends the request to the API server, which is responsible
    for handling authentication, validating input data, and retrieving or
    manipulating data.

*** API response
    Finally, the API server sends a response to the client. An API response
    typically includes the following components.

**** Status code
     HTTP status codes are three-digit codes that indicate the outcome of an
     API request. Some of the most common status codes include `200 OK`, which
     indicates that the server successfully returned the requested data, `201
     Created`, which indicates the server successfully created a new resource
     and `404 Not Found`, which indicates that the server could not find the
     requested resource.

**** Response headers
     HTTP response headers are very similar to request header, except they are
     used to provide additional information about the server's response.

**** Response body
     The response body includes the actual data or content the client asked for
     \- or an error message if something went wrong.

** API Architectures

*** REST
    REST stands for Representational State Transfer. It focuses on resources
    identified by URIs (endpoints) and uses standard HTTP methods such as
    `GET`, `POST`, `PUT` and `DELETE` for operations.

*** GraphQL
    Open-source query language that allows clients to specify exactly what data
    they need in a single request, without chaining multiple requests together.
    This reduces the number of round trips between the client and server.

*** RPC
    RPC stands for Remote Procedural Call. It invokes methods on remote systems
    as if they were local functions calls. Often tightly coupled to specific
    procedures or operations, can be implemented in various transport protocols
    (HTTP, gRPC, etc.).

*** SOAP
    SOAP stands for Simple Object Access Protocol. It relies on XML-based
    messaging for communication and enforces strict contract defined by WSDL.
    Strong emphasis on standards and formal contracts, useful in enterprise
    scenarios where rigorous security and transactional integrity are required.

*** Webhooks
    Webhooks are use to implement event-driven architectures, in which request
    are automatically sent in response to event-based triggers. When a specific
    event occurs in an application, such as a payment being made, the
    application can send an HTTP request to a pre-configured webhook URL with
    the relevant event data in the request payload. The system that receives
    the webhook can then process the event and take the appropriate action.

    ===

{https://www.postman.com/api-platform/api-lifecycle/}[API Lifecycle]
